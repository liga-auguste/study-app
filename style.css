:root {
  --bcg-col: white;
  --text-color: #2d3142;
  --lecture-bcg: #eaebeb;
  --bcg: #ffffff;
  --btn-hover: #ef8354;
  --btn: #a9b3c6;
  --acc-col-faded: #fad6c7;
  --lecture-hover: #dadfe7;
}

.darkmode {
  --bcg-col: #121212;
  --text-color: rgb(193, 194, 198);
  --lecture-bcg: #252424;
  --bcg: #ffffff;
  --btn-hover: #6c3e2b;
  --btn: #34435b;
  --acc-col-faded: #fad6c7;
  --lecture-hover: #3c3c3f;
}

* {
  box-sizing: border-box;
}

html {
  font-family: "Barlow Semi Condensed", sans-serif;
}

.headerFlex {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

#addButton {
  align-self: center;
}

body {
  margin: 1rem;
  max-width: 75%;
  margin: 0 auto;
  color: var(--text-color);
  background-color: var(--bcg-col);
}

.lecture {
  background-color: var(--lecture-bcg);
  padding: 0.75rem;
  border: 1px solid var(--btn);
  border-radius: 1rem;
  display: flex;
  flex-direction: column;
}

.lecture:hover {
  background-color: var(--lecture-hover);
  transition: transform 0.5s ease, background-color 0.5s ease;
}

.lectures-container {
  display: grid;
  gap: 1rem;
  grid-template-columns: 1fr 1fr;
  align-items: stretch;
}

.editableLecture {
  background-color: var(--acc-col-faded);
}

.form-inline {
  display: flex;
  flex-flow: row wrap;
  align-items: center;
  gap: 0.5rem;
  font-family: "Barlow Semi Condensed", sans-serif;
}

.form-inline input {
  vertical-align: middle;
  margin: 5px 10px 5px 0;
  background-color: #fff;
  border: 1px solid #ddd;
  box-sizing: border-box;
  line-height: 1.6rem;
}

.smallInput {
  width: 3rem;
  border-radius: 5px;
}

.longInput {
  width: 100%;
}

button {
  margin-top: 0.5rem;
  border: none;
  background-color: var(--btn);
  color: var(--text-color);
  text-decoration: none;
  transition: transform 0.2s ease, background-color 0.3s ease;
  border-radius: 20px;
  padding: 0.5rem 0.75rem;
  font-family: inherit;
}

.btn-align {
  text-align: right;
  padding-right: 2rem;
}

.save {
  background-color: var(--btn-hover);
}

button:hover {
  background-color: var(--btn-hover);
  transform: scale(1.05);
}

.link-container {
  display: flex;
  gap: 1rem;
  justify-content: flex-end;
  align-items: flex-end;
  margin-top: auto;
}

.custom-upload-button {
  display: block;
  padding: 8px 16px;
  color: var(--text-color);
  cursor: pointer;
  font-family: "Barlow Semi Condensed", sans-serif;
}

.editableLinkCont {
  justify-content: space-between;
}

.remove-btn {
  margin-left: 0.5rem;
  line-height: 0.85rem;
}

/* small screens */
@media screen and (max-width: 765px) {
  .lectures-container {
    display: grid;
    grid-template-columns: 1fr;
  }
}

/* medium screens */
@media screen and (min-width: 766px) {

}
/* large screens */
@media screen and (min-width: 1200px) {

}

/* Darkmode switch */
#switch {
  margin-top: 27px;
}

#theme-switch {
  height: 50px;
  width: 50px;
  padding: 0;
  border-radius: 50%;
  background-color: var(--btn);
  display: flex;
  justify-content: center;
  align-items: center;
  position: fixed;
  top: 20px;
  right: 20px;
}

#theme-switch svg {
  fill: var(--text-color)
}
#theme-switch svg:last-child {
  display: none;
}
.darkmode #theme-switch svg:first-child {
  display: none;
}
.darkmode #theme-switch svg:last-child {
  display: block;
}

/* Modal */
dialog {
  padding: 1.5rem;
  border-radius: 6px;
  background-color: var(--lecture-hover);
  line-height: 1.5rem;
}

dialog::backdrop {
  background-color: rgb(0,0,0,0.6);
}

body.darkmode dialog {
  background-color: var(--lecture-hover);
  color: var(--text-color);
}

body.darkmode dialog input,
body.darkmode dialog textarea,
body.darkmode dialog select {
  background-color: #1e1e1e;
  color: var(--text-color);
  border: 1px solid var(--btn);
}

body.darkmode dialog button {
  background-color: var(--btn);
  color: var(--text-color);
}

.custom-upload-button {
  display: inline-block;
  padding: 0.5rem 1rem;
  background-color: var(--btn);
  color: var(--text-color);
  border-radius: 20px;
  cursor: pointer;
  transition: background-color 0.3s ease, transform 0.2s ease;
  font-family: inherit;
}

.custom-upload-button:hover {
  background-color: var(--btn-hover);
  transform: scale(1.05);
}

